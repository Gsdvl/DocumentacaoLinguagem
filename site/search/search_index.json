{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"lexer/","title":"\ud83d\udd11 Palavras Reservadas da Linguagem G2DL","text":"<p>Palavras reservadas s\u00e3o identificadores especiais que n\u00e3o podem ser usados como nomes de vari\u00e1veis, fun\u00e7\u00f5es ou objetos, pois possuem um significado fixo na linguagem. Elas fazem parte da gram\u00e1tica principal e s\u00e3o reconhecidas diretamente pelo analisador l\u00e9xico.</p> <p>Abaixo est\u00e1 a lista completa das palavras reservadas da linguagem G2DL, junto com uma descri\u00e7\u00e3o do papel de cada uma.</p>"},{"location":"lexer/#controle-de-fluxo","title":"\ud83e\udde0 Controle de Fluxo","text":"Palavra Fun\u00e7\u00e3o <code>if</code> Inicia uma estrutura condicional. Executa um bloco caso a condi\u00e7\u00e3o seja verdadeira. <code>else</code> Define o bloco alternativo de um <code>if</code> quando a condi\u00e7\u00e3o \u00e9 falsa. <code>while</code> Cria um la\u00e7o de repeti\u00e7\u00e3o baseado em uma condi\u00e7\u00e3o booleana. <code>for</code> Inicia um la\u00e7o com controle expl\u00edcito de vari\u00e1vel e intervalo. <code>break</code> Interrompe a execu\u00e7\u00e3o do la\u00e7o mais pr\u00f3ximo (<code>for</code> ou <code>while</code>)."},{"location":"lexer/#funcoes-e-retornos","title":"\ud83e\uddee Fun\u00e7\u00f5es e Retornos","text":"Palavra Fun\u00e7\u00e3o <code>function</code> Define uma fun\u00e7\u00e3o com nome, par\u00e2metros e corpo execut\u00e1vel. <code>return</code> Finaliza a fun\u00e7\u00e3o atual e retorna um valor opcional ao chamador."},{"location":"lexer/#valores-literais","title":"\ud83d\udd22 Valores Literais","text":"Palavra Fun\u00e7\u00e3o <code>true</code> Literal booleano verdadeiro. <code>false</code> Literal booleano falso."},{"location":"lexer/#entrada-e-saida","title":"\ud83d\udda8\ufe0f Entrada e Sa\u00edda","text":"Palavra Fun\u00e7\u00e3o <code>printf</code> Fun\u00e7\u00e3o nativa para exibir dados no terminal (semelhante \u00e0 <code>printf</code> em C). <code>input</code> Solicita entrada do usu\u00e1rio e retorna como string."},{"location":"lexer/#observacoes","title":"\ud83d\udee1\ufe0f Observa\u00e7\u00f5es","text":"<ul> <li>Todas essas palavras s\u00e3o reconhecidas diretamente pelo lexer e n\u00e3o exigem nenhuma declara\u00e7\u00e3o pr\u00e9via.</li> <li>Elas n\u00e3o podem ser sobrescritas (por exemplo, n\u00e3o \u00e9 poss\u00edvel criar uma fun\u00e7\u00e3o chamada <code>if</code>).</li> <li>S\u00e3o case-sensitive (sens\u00edveis a mai\u00fasculas/min\u00fasculas). Portanto, <code>If</code> ou <code>ELSE</code> n\u00e3o s\u00e3o v\u00e1lidas.</li> </ul>"},{"location":"lexer/#exemplo-de-uso","title":"\ud83e\uddea Exemplo de uso","text":"<p>```bash function somar(a, b) {     if (a &gt; b) {         printf(\"a \u00e9 maior\");     } else {         printf(\"b \u00e9 maior ou igual\");     }     return a + b; }</p>"}]}